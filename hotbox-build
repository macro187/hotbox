#!/bin/sh
set -eu
HOTBOX=$(CDPATH= cd -- "$(dirname -- "$0")" && pwd -P)


. $HOTBOX/lib/sh.sh


test $# -gt 0 || die "Expected <spec>"
spec="$1" ; shift

test $# -eq 0 || die "Unexpected argument '$1'"


#
# Read container information from <spec>
#
. $HOTBOX/lib/source-spec.sh
test -n "$baseimage" || die "No baseimage specified in $spec spec"
test -n "$shell" || die "No shell specified in $spec spec"
test -n "$workdir" || die "No workdir specified in $spec spec"


#
# Work out additional container information
#
image="hotbox-$spec"
user="$(current_user)"
uid="$(current_uid)"
gid="$(current_gid)"
docker_gid="$(getent group docker | cut -d: -f3)"


#
# Build container image
#
heading "Building $image container image"
echo_on
PROGRESS_NO_TRUNC=1 \
docker build \
    --progress plain \
    \
    -t $image \
    \
    --label hotbox \
    --label "hotbox.features=$features" \
    --label hotbox.shell=$shell \
    --label hotbox.shellarg=$shellarg \
    --label hotbox.workdir=$workdir \
    \
    --build-arg baseimage=$baseimage \
    --build-arg spec=$spec \
    --build-arg user=$user \
    --build-arg uid=$uid \
    --build-arg gid=$gid \
    --build-arg docker_gid=$docker_gid \
    --build-arg workdir=$workdir \
    \
    -f - \
    $HOTBOX \
    < $HOTBOX/lib/Dockerfile
echo_off


#
# Clean up unused intermediate container images
#
heading "Pruning hotbox container images"
echo_on
docker image prune -f --filter label=hotbox
echo_off
