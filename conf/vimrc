"
" Ron's Vim Configuration
"
" This is sourced by all Vim-like editors
"

set nobackup
set nowritebackup
set noswapfile

set visualbell

set colorcolumn=121

set encoding=utf8

set fileformats=unix,dos

set number
set ruler
set rulerformat=%#ModeMsg#%l,%c%V%=%P

set list
set listchars=tab:>\ ,trail:.,extends:>,precedes:<,nbsp:_
set nohlsearch

set scrolloff=999
set backspace=indent,eol,start
set nofoldenable

set tabstop=4
set shiftwidth=4
set expandtab
set autoindent

set formatoptions+=r
set formatoptions+=o
set formatoptions+=j

syntax on
try
  colorscheme macrobsidian
  catch
  try
    colo pablo
    catch
  endtry
endtry


"
" Markdown
"
autocmd BufRead,BufNew *.md set filetype=markdown
let g:markdown_fenced_languages = ["csharp=cs"]


"
" GVim
"
if ! has('nvim')
    if has("gui_running")
        if has("gui_win32")
            set guifont=DejaVu_Sans_Mono:h11:cDEFAULT
        else
            set guifont=monospace\ 12
        endif
        set guioptions=arbh
        set columns=120
        set lines=40
    endif
endif


"
" Vim LSP Setup
"
if ! has('nvim')

    autocmd User lsp_setup call s:SetupOmnisharpLsp()
    function s:SetupOmnisharpLsp() abort
        if executable('OmniSharp')
            call lsp#register_server({
                \ 'name': 'omnisharp-roslyn',
                \ 'cmd': [ 'OmniSharp', '-lsp' ],
                \ 'allowlist': [ 'cs' ],
                \ })
        endif
    endfunction

    augroup lsp_install
        au!
        autocmd User lsp_buffer_enabled call s:SetupLspBuffer()
    augroup end

    function! s:SetupLspBuffer() abort
        setlocal omnifunc=lsp#complete
        setlocal signcolumn=yes
        if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
        nmap <buffer> gd <plug>(lsp-definition)
        nmap <buffer> gs <plug>(lsp-document-symbol-search)
        nmap <buffer> gS <plug>(lsp-workspace-symbol-search)
        nmap <buffer> gr <plug>(lsp-references)
        nmap <buffer> gi <plug>(lsp-implementation)
        nmap <buffer> gt <plug>(lsp-type-definition)
        nmap <buffer> <leader>rn <plug>(lsp-rename)
        nmap <buffer> [g <plug>(lsp-previous-diagnostic)
        nmap <buffer> ]g <plug>(lsp-next-diagnostic)
        nmap <buffer> K <plug>(lsp-hover)
        nnoremap <buffer> <expr><c-f> lsp#scroll(+4)
        nnoremap <buffer> <expr><c-d> lsp#scroll(-4)
        " let g:lsp_format_sync_timeout = 1000
    endfunction
endif


if ! has('nvim')
    nmap <c-n> :cn<cr>
    nmap <c-p> :cp<cr>

    " dotnet build and error format
    autocmd BufRead *.cs set makeprg=clear\ &&\ dotnet\ build\ /p:GenerateFullPaths=true\ /clp:NoSummary
    autocmd BufRead *.cs set efm=%f(%l\\\,%c):\ %tarning\ %m\ [%.%#],%f(%l\\\,%c):\ %trror\ %m\ [%.%#]
    autocmd BufRead *.cs nmap <buffer> <Leader>b :exe ':wa'<CR>:silent make<CR>:redr!<CR>:cw<CR>
endif
